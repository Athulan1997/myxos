alias physicalSP S0;
physicalSP = ([PTBR + 2*(SP/512)]*512) + (SP%512);

alias sysCallNo S1;
sysCallNo = [physicalSP - 1];

alias word S2;
word = [physicalSP - 3];

alias fDesc S3;
fDesc= [physicalSP - 4];

if (sysCallNo == 5) then
	if ((fDesc < 0) || (fDesc >= 8)) then
		[physicalSP - 2]=-1;
		ireturn;
	endif;

	alias cPID S4;
	cPID = (PTBR - 1024)/8;
	
	alias cPCB S5;
	cPCB = READY_LIST + 32*cPID;

	alias FileIndex S6;
	FileIndex=[cPCB + 2*fDesc + 15];

	alias LSEEK S7;
	LSEEK=[cPCB + 2*fDesc + 16];

	if (FileIndex == -1) then
		[physicalSP - 2]=-1;
		ireturn;
	endif;

	alias FATIndex S8;
	FATIndex=[FILE_TABLE + 2*FileIndex];

	alias BasicBlock S9;
	BasicBlock=[FAT + 8*FATIndex + 2];
	load(1,BasicBlock);

	alias DFLIndex S10;
	DFLIndex=[SCRATCHPAD + (LSEEK/512)];

	if ((DFLIndex == -1) || (DFLIndex == "")) then
		DFLIndex=24;
		while(DFLIndex < 448) do
			if ([DISK_LIST + DFLIndex] == 0) then
				[DISK_LIST + DFLIndex]=1;
				break;
			endif;
			DFLIndex=DFLIndex+1;
		endwhile;

		if (DFLIndex == 448) then
			[physicalSP - 2]=-1;
			ireturn;
		endif;

		[SCRATCHPAD + (LSEEK/512)]=DFLIndex;
		store(1,BasicBlock);
		[FAT + 8*FATIndex + 1]=[FAT + 8*FATIndex + 1]+512;
		store(5,19);
		store(6,20);
	endif;

	load(1,DFLIndex);
	[SCRATCHPAD + (LSEEK%512)]=word;
	store(1,DFLIndex);
	[cPCB + 2*fDesc + 16]=[cPCB + 2*fDesc + 16]+1;
	[physicalSP - 2]=0;
endif;

ireturn;
